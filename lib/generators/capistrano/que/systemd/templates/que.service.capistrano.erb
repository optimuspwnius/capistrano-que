#   - systemctl enable que
#   - systemctl {start,stop,restart} que

[Unit]
Description=que for <%= "#{fetch(:application)} (#{fetch(:stage)})" %>

After=syslog.target network.target

# https://www.freedesktop.org/software/systemd/man/systemd.service.html
# https://www.freedesktop.org/software/systemd/man/systemd.exec.html

[Service]

Type=simple

WorkingDirectory=<%= File.join(fetch(:deploy_to), 'current') %>

ExecStart=<%= expanded_bundle_path %> exec que <%= File.join(fetch(:deploy_to), 'current') %>/config/environment.rb -q <%= fetch(:host, :queue) ? fetch(:host, :queue) : fetch(:que_queue_name) %>

# Use `systemctl kill -s TSTP que` to quiet the Que process

# Greatly reduce Ruby memory fragmentation and heap usage
# https://www.mikeperham.com/2018/04/25/taming-rails-memory-bloat/
Environment=MALLOC_ARENA_MAX=2

# if we crash, restart
RestartSec=1
Restart=on-failure

# output goes to /var/log/syslog (Ubuntu) or /var/log/messages (CentOS)
<%="StandardOutput=append:#{fetch(:que_log)}" if fetch(:que_log) %>
<%="StandardError=append:#{fetch(:que_error_log)}" if fetch(:que_error_log) %>

SyslogIdentifier=que

[Install]
WantedBy=default.target
